#!/usr/bin/env julia

using DelimitedFiles
using FFTW
using Statistics

run(pipeline(`grep dragx test.log`,`sed 's/dragx//g'`,"dragx.log"));
data=readdlm("dragx.log");
dragx=data[:,4];
time=data[:,1];
println("Re=100, C_D=$(mean(dragx)*2), peak-to-peak=$(sqrt(var(dragx)*2))");

n=length(dragx);
p=fft(dragx);
nuniq=ceil(Int,(n+1)/2);
p=abs.(p[1:nuniq]);
p=p/n;
p=p.^2;

if n % 2 > 0
    p[2:length(p)]=p[2:length(p)]*2
else
    p[2:(length(p)-1)]=p[2:(length(p)-1)]*2
end

fs=1/(time[2]-time[1]);
freq=(0:(nuniq-1))*(fs/n);
(amp,ind)=findmax(p[2:end]);
fs=freq[ind+1]/2;

cd=sqrt(p[1])*2;

println("Re=100, C_D=$cd, peak-to-peak=$(sqrt(amp)*2), St=$fs");

pm=p[ind];
p0=p[ind+1];
pp=p[ind+2];

d=(time[2]-time[1])*2;

fs=-d*(pp-pm)/(2*(pp-2*p0+pm))+freq[ind+1]/2;
ps=-(pp-pm)^2/(8*(pp-2*p0+pm))+p0; ps=sqrt(ps)*2.;

println("Re=100, C_D=$cd, peak-to-peak=$ps, St=$fs");

icode=0

cc=1.7116331982476;
pp=0.008000855476467221;
ss=0.19677834721044413;

if abs(cd-cc)/cc > 1.e-6; icode+=1; end
if abs(ps-pp)/pp > 1.e-6; icode+=2; end
if abs(fs-ss)/ss > 1.e-6; icode+=4; end

open("ecode", "w") do io; write(io, string(icode)); end;

exit(icode)
