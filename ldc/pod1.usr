c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      udiff =0.
      utrans=0.
      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      qvol   = 0.0
      source = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      common /ldcpar/ dxmin

      ux=0.0
      uy=0.0
      uz=0.0
      temp=0.0

      eps = 1.e-5
      y0 = 1.

      if (y.gt.(y0-eps)) ux = (1.-x*x)**2

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat

      include 'SIZE'
      include 'TOTAL'

      integer e

      common /ldcpar/ dxmin
      real tmp(1)

      eps = 1.e-4

      xmin = glmin(xc,nelt*2**ldim)
      xmax = glmax(xc,nelt*2**ldim)

      ymin = glmin(yc,nelt*2**ldim)
      ymax = glmax(yc,nelt*2**ldim)

      xave = xmax - xmin

      sx = 1 / (xmax-xmin)
      sy = 1 / (ymay-ymin)

      nelx = nint(sqrt(real(nelgt)))

      do e=1,nelt
      do i=1,2**ldim
         xc(i,e) = 2.*nint(nelx * xc(i,e)) / real(nelx)-1.
         yc(i,e) = 2.*nint(nelx * yc(i,e)) / real(nelx)-1.
      enddo
      enddo

      g = .8
      if (param(49).gt.0.1) g = param(49)

      if (nio.eq.0) write (6,*) 'geometric factor = ',g

      dxmin = 1.
      
      do e=1,nelt
      do i=1,2**ldim
         x = xc(i,e)
         y = yc(i,e)
         m = nint(nelx*.5)
         nx = abs(nint(x*m))
         ny = abs(nint(y*m))
         xc(i,e) = 2*(sign(1.,x) * (1-g**nx)/(1-g**m) * .5 + .5)-1.
         yc(i,e) = 2*(sign(1.,y) * (1-g**ny)/(1-g**m) * .5 + .5)-1.
         x = xc(i,e)

         if (x.gt.eps.and.x.lt.dxmin) dxmin = x
      enddo
      enddo

      tmp(1) = dxmin

      dxmin = glmin(tmp,1)

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      return
      end
c----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
c----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,eg)
c     NOTE ::: This is not guaranteed to be called by every process
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      ux=0.0
      uy=0.0
      uz=0.0
      temp=0.0

      eps = 1.e-5
      y0 = 1.

      if (y.gt.(y0-eps)) ux = (1.-x*x)**2

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'  
      include 'TOTAL' 

      parameter (lt=lx1*ly1*lz1*lelt)
      common /myoutflow/ d(lx1,ly1,lz1,lelt),m1(lx1*ly1*lz1,lelt)
      common /kento/ uo(lt),vo(lt),wo(lt)

      if (istep.eq.0) call opcopy(uo,vo,wo,vx,vy,vz)
      if (istep.ne.0) call opcopy(vx,vy,vz,uo,vo,wo)
      if (istep.eq.1) call my_pod

      return
      end
c-----------------------------------------------------------------------
      subroutine get_saved_fields(usave,vsave,wsave,nsave,u0)

c     This routine reads files specificed in file.list

      include 'SIZE'
      include 'TOTAL'
      include 'ZPER'

      parameter (lt=lx1*ly1*lz1*lelt)
      real usave(lt,nsave),vsave(lt,nsave),wsave(lt,nsave)
      real u0(lt,3) ! Initial condtion


      ierr = 0
      if (nid.eq.0) open(77,file='file.list',status='old',err=199)
      ierr = iglmax(ierr,1)
      if (ierr.gt.0) goto 199
      n = lx1*ly1*lz1*nelt
      n2= lx2*ly2*lz2*nelt

      icount = 0
      do ipass=1,nsave

         call blank(initc,127)
         initc(1) = 'done '
         if (nid.eq.0) read(77,127,end=998) initc(1)
  998    call bcast(initc,127)
  127    format(a127)

         if (indx1(initc,'done ',5).eq.0) then ! We're not done
            nfiles = 1
            call restart(nfiles)  ! Note -- time is reset.

!           Usave = U_snapshot - U_stokes:

            call opsub3 (usave(1,ipass),vsave(1,ipass),wsave(1,ipass)
     $                  ,vx,vy,vz,u0(1,1),u0(1,2),u0(1,3))

            icount = icount+1
         else
            goto 999
         endif

      enddo

  999 continue  ! clean up averages
      if (nid.eq.0) close(77)

      nsave = icount ! Actual number of files read

      return

  199 continue ! exception handle for file not found
      ierr = 1
      if (nid.eq.0) ierr = iglmax(ierr,1)
      call exitti('Auto averager did not find list file.$',ierr)

      return
      end
c-----------------------------------------------------------------------
      subroutine my_pod
      include 'SIZE'  
      include 'TOTAL' 

      parameter (lt=lx1*ly1*lz1*lelt,ms=100)
      real usave(lt,ms),vsave(lt,ms),wsave(lt,ms)
      real uu(ms,ms)
      real uw(lt),vw(lt),ww(lt),h1(lt),h2(lt)
      real u0(lt,3)

      n  = lx1*ly1*lz1*nelt
      ns = ms

      call opdiv(pr,vx,vy,vz)
      call outpost(vx,vy,vz,pr,t,'ttt')

      call incomprn (vx,vy,vz,pr)
      call opdiv(pr,vx,vy,vz)
      call outpost(vx,vy,vz,pr,t,'ttt')
      call opcopy   (u0(1,1),u0(1,2),u0(1,3),vx,vy,vz)

      call get_saved_fields(usave,vsave,wsave,ns,u0)

      call rone (h1,n)
      call rzero(h2,n)

      do j=1,ns                    ! Form the Gramian, U=U_K^T A U_K
         call axhelm(uw,usave(1,j),h1,h2,1,1)
         call axhelm(vw,vsave(1,j),h1,h2,1,1)
         if (ldim.eq.3) call axhelm(ww,wsave(1,j),h1,h2,1,1)
         do i=1,ns
            uu(i,j) = glsc2(usave(1,i),uw,n)+glsc2(vsave(1,i),vw,n)
            if (ldim.eq.3) uu(i,j) = uu(i,j)+glsc2(wsave(1,i),ww,n)
            if (nid.eq.0) write(88,*) uu(i,j)
         enddo
         write(6,*) j,uu(1,j),' uu'
      enddo

      call exitti('quit in my_pod$',ns)

      return
      end
c-----------------------------------------------------------------------
