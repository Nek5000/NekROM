c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      udiff =0.
      utrans=0.
      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      qvol   = 0.0
      source = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk

      include 'SIZE'  
      include 'TOTAL' 

      common /myoutflow/ d(lx1,ly1,lz1,lelt),m1(lx1*ly1*lz1,lelt)
      common /nusselt/ fmask(lx1,ly1,lz1,lelt), nuss

      real nuss

      real m1
      rq  = 2.
      uin = 0.
      call turb_outflow(d,m1,rq,uin)

      if (istep.eq.0) then
         call set_fmask
      else
         call calc_nuss
      endif

      call avg_all

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux=1-y*y
      uy   = 0
      uz   = 0
      temp = 0
      pa   = 0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'
    
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      return
      end
c----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
c----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,eg)
c     NOTE ::: This is not guaranteed to be called by every process
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e,eg

      e = gllel(eg)

      ux=1-y*y
      uy=0.0
      uz=0.0
      temp=0.0
      pa  =0.0

      flux=1.

      return
      end
c-----------------------------------------------------------------------
      subroutine calc_nuss

      include 'SIZE'
      include 'SOLN'
      include 'MASS'
      include 'INPUT'
      include 'TSTEP'

      common /nusselt/ fmask(lx1,ly1,lz1,lelt), nuss

      real nuss, bsurf(lx1,ly1,lz1,lelt)

      n = lx1*ly1*lz1*nelv

      call col3(bsurf,bm1,fmask,n)
      tsurf = glsc2(t,bsurf,n) / glsum(bsurf,n)
      tave = glsc2(t,bm1,n) / volvm1

      h = 2. ! height of the channel
      q = 1. ! flux on the surface
      nuss = q * h / (param(8)*(tsurf-tave))
      if (nio.eq.0) write (6,1) time,tsurf,tave,nuss
    1 format(1p4e12.5,' fluxes')

      return
      end
c-----------------------------------------------------------------------
      subroutine set_fmask

      include 'SIZE'
      include 'INPUT'

      common /nusselt/ fmask(lx1,ly1,lz1,lelt)

      integer e,f

      call rzero(fmask,lx1*ly1*lz1*nelv)

      do e=1,nelt
      do f=1,ldim*2
         if (cbc(f,e,2).eq.'f  ') then
            call facind(kx1,kx2,ky1,ky2,kz1,kz2,lx1,ly1,lz1,f)
            do j=ky1,ky2
            do i=kx1,kx2
               fmask(i,j,1,e) = 1.
            enddo
            enddo
         endif
      enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
