[GENERAL]
mode    = all # (off=offline,on=online,all=both,onb=online with bases,cp)
field   = vt  # fields to perform the pod-rom (v=vel.,t=temp.,vt=both)
nb      = 10  # number of modes for the pod-rom
avginit = 0   # starting time-step of rom averaging
rktol   = 0   # adaptive Runge-Kutta error tolerance
tneubc  = no  # inhomogeneous Neumann BC for temperature
nplay   = 0   # number of replay modes

[POD]
type     = l2  # pod-inner product (l2,h10,hlm)
mode0    = avg # 0th mode of the POD basis (avg=mean(snaps),state=vx,vy,vz,t)
combined = no  # POD based on combined velocity and thermal Gramian
ratio    = 0.5 # Gramian ratio (1 -> pure velocity, 0 -> pure thermal)

[QOI]
freq = 0  # frequency of qoi dump (<1 -> iostep)
tke  = no # turbulence kinetic energy
drag = no # drag based on OBJ data
nu   = 0  # nusselt number based on problem type (1-3)

[COPT]
mode    = off   # constrained optimization (off,on,select)
field   = vt    # fields to perform the c-opt. (v=vel.,t=temp.,vt=both)
barrier = inv   # barrier function (inv=inverse,log=logarithm)
boxtol  = 1.e-5 # box tolerance
vpar0   = 1.e-1 # initial velocity parameter
vnloop  = 5     # number of velocity loops
tpar0   = 1.e-1 # initial temperature parameter
tnloop  = 5     # number of temperature loops

[FAST]
ceval = no # fast c-evaluation for skew-symmetric c-tensor
heval = no # fact h-evaluation by change of coordinates

[Buoyancy] # cannot choose mag+angle and vector components in same .mor
magnitude = 1.   # magnitude of gravity vector
angle     = -90. # angle of gravity vector (degrees displacement from x-axis)
# gx      = 0.   # x-component of gravity vector
# gy      = 0.   # y-component of gravity vector
# gz      = 0.   # z-component of gravity vector

[FORCING]
body     = no # body force on the velocity field, set fx,fy,fz in user file
source   = no # source term on the thermal field, set qq in user file 
buoyancy = no # buoyancy term the velocity field, set gx,gy,gz, in userfile

[FILTER]
location = none  # (none,conv=convecting field,post=entire field)
type     = tfunc # (tfunc=transfer function,diff=differentiation) 
modes    = 0.5   # number of modes to filter for tfunc, <0 -> percentage of nb
radius   = 1     # radius of filter for the differentiation filter

[EI]
mode    = no  # error-indicator
eqn     = NS  # equation
