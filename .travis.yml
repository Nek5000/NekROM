dist: xenial

language: bash

notifications:
  email:
    on_success: change
    on_failure: always

sudo: required

before_install:
  - export MOR_DIR=$(pwd -P)

  # Install MPICH
  - sudo apt-get update -qq
  - sudo apt-get install -y libmpich-dev mpich

  # Install Julia
  - wget -nv https://julialang-s3.julialang.org/bin/linux/x64/1.0/julia-1.0.3-linux-x86_64.tar.gz
  - tar xvzf julia-1.0.3-linux-x86_64.tar.gz
  - sudo ln -v -s $MOR_DIR/julia-1.0.3/bin/julia /usr/bin/julia
  - $MOR_DIR/tests/julia-init

  # Setup Nek5000
  - git clone --single-branch -b presolve-fix https://github.com/kent0/Nek5000
  - export SOURCE_ROOT=$MOR_DIR/Nek5000
  - (cd Nek5000/tools; ./maketools genmap)

  # Test Julia
  - julia-1.0.3/bin/julia --version
  - /usr/bin/julia --version
  - /usr/bin/env julia --version

  - virtualenv --python=python venv
  - source venv/bin/activate
  - python -m pip install -U pip
  - pip install -U wheel
  - pip install numpy
  - pip install pytest
    #  - python setup.py build
    #  - python -m pytest

before_script:
  - export FC=mpif77
  - export CC=mpicc
  - export FFLAGS="-w -mcmodel=medium -fprofile-arcs -ftest-coverage"
  - export USR_LFLAGS+="-mcmodel=medium"
  - export USR='aux.o ana.o conv.o const.o dump.o ei.o lapack.o pod.o pod_filter.o qoi.o rom.o read.o time.o unit.o'

script: $MOR_DIR/tests/test.sh
jobs:
  include:
  - stage: unit
    env: TYPE=UNIT TEST=GRAMMIAN          IPS=L2
  - env: TYPE=UNIT TEST=INITIAL_CONDITION IPS=L2
  - env: TYPE=UNIT TEST=A0                IPS=L2
  - env: TYPE=UNIT TEST=B0                IPS=L2
  - env: TYPE=UNIT TEST=C0                IPS=L2
  - env: TYPE=UNIT TEST=GRAMMIAN          IPS=H10
  - env: TYPE=UNIT TEST=INITIAL_CONDITION IPS=H10
  - env: TYPE=UNIT TEST=A0                IPS=H10
  - env: TYPE=UNIT TEST=B0                IPS=H10
  - env: TYPE=UNIT TEST=C0                IPS=H10
  - stage: integration
    env: TYPE=INTEG TEST=CYL IPS=L2 NP=1 NB=20 LB=20 SCR=tdragx
  - env: TYPE=INTEG TEST=CYL IPS=L2 NP=2 NB=20 LB=20 SCR=tdragx
  - env: TYPE=INTEG TEST=CYL IPS=L2 NP=1 NB=20 LB=50 SCR=tdragx
  - env: TYPE=INTEG TEST=CYL IPS=L2 NP=1 NB=10 LB=10 SCR=tbox

after_success:
  - bash <(curl -s https://codecov.io/bash)

env:
  global:
    secure: bnXmYvIM+avMEjfHSwJ+VyXppvUSov2cMwagXJgU8xRgTkWhDD1H1lzN+PYqDr66859vzdc+kxxDK17yVfEOqUEiZAeEdWhe+fvXznijPPI8C7Gyycra81XWpxFhGaweOF0q+cUQbjZJhcd4O+aHTVtAVi3QWA1rQsucHrLzjixpW28eooPAQ0x01BZkSmfq6eaJ+2mpby3j6gfHbrz7nmmEa+SaDtuZ9kFZPvrABAJ/W5EetrTUMP2a+X/y4IwrAZhbma+z+uSmsNMf8mgydyar9Nnt9pxjcpOtsMrhBv5nY0ngDGAR0mzJn2ZD/mzwC5xI0PApYhgyIXTdPsGAPhyDjEbzhQqv8UmcuqzFTrtalYekTTAM+6orr3bOaLo/7Uv83+CdiXAh87sRRyMQ9nwNmHAQRWNdXHRLbamoQIBmQcOxZa2Uwspq8RbIlzeshYlSA4P0EK5rgkgAVVw/NohoFOh3f7pNdxhM3iUPGB6s6d885ktOpWWoaMngZjL2wl5KQ9JWjv9I/v4gEI0KcDsQwsasxDBnsBhaFq1Caur4Rd04qXPRMzlG4JH0dYsSvqjJNaXe3XhPXvdou/V7j9+Mlo5ZhfWpLvRHxOX8hz+PXVz0DZ7cDTl0XM0rM26t6T9zuD1pCNRdYMHqJJX4wAqKoKj51cZXfwmhaWby1+c=
